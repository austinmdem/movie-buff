{"ast":null,"code":"var _jsxFileName = \"/Users/amd32653/Desktop/movie-buff/src/components/profile-forms/ProfileForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { StyledProfileForm } from '../styles/StyledProfileForm';\nimport { Animated } from 'react-animated-css';\nconst initialState = {\n  topthreemovies: '',\n  favoritegenre: ''\n};\n\nconst ProfileForm = ({\n  profile: {\n    profile,\n    loading\n  },\n  createProfile,\n  getCurrentProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState(initialState);\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n\n    if (!loading && profile) {\n      const profileData = { ...initialState\n      };\n\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n\n      if (Array.isArray(profileData.topthreemovies)) profileData.topthreemovies = profileData.topthreemovies.join(',');\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n  const {\n    topthreemovies,\n    favoritegenre\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, profile ? true : false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledProfileForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Animated, {\n    animationIn: \"fadeInUpBig\",\n    animationOut: \"fadeout\",\n    isVisible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Create Your Profile\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Let's get some information to make your profile stand out\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"* = All fields required\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Favorite Movie Genre\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"favoritegenre\",\n    value: favoritegenre,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"* Select Favorite Genre\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Adventure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Adventure\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Comedy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, \"Comedy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"True Crime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, \"True Crime\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Drama\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, \"Drama\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Epics/Historical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"Epics/Historical\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Horror\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Horror\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Musicals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, \"Musicals\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Science Fiction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"Science Fiction\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"War\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"War\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Westerns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, \"Westerns\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Other\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Top 3 Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Top 3 Movies\",\n    name: \"topthreemovies\",\n    value: topthreemovies,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Please use comma separated values (eg. Interstellar, Gladiator, Spy Game)\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \" btn-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    className: \"btn btn-return\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Go Back\"))))));\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(ProfileForm);","map":{"version":3,"sources":["/Users/amd32653/Desktop/movie-buff/src/components/profile-forms/ProfileForm.js"],"names":["React","useState","useEffect","Link","PropTypes","connect","createProfile","getCurrentProfile","StyledProfileForm","Animated","initialState","topthreemovies","favoritegenre","ProfileForm","profile","loading","history","formData","setFormData","profileData","key","Array","isArray","join","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nimport { StyledProfileForm } from '../styles/StyledProfileForm';\nimport { Animated } from 'react-animated-css';\n\nconst initialState = {\n  topthreemovies: '',\n  favoritegenre: '',\n};\n\nconst ProfileForm = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      if (Array.isArray(profileData.topthreemovies))\n        profileData.topthreemovies = profileData.topthreemovies.join(',');\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const { topthreemovies, favoritegenre } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, profile ? true : false);\n  };\n\n  return (\n    <>\n      <StyledProfileForm>\n        <Animated\n          animationIn=\"fadeInUpBig\"\n          animationOut=\"fadeout\"\n          isVisible={true}\n        >\n          <div className=\"box\">\n            <h1 className=\"large text-primary\">Create Your Profile</h1>\n            <p className=\"lead\">\n              Let's get some information to make your profile stand out\n            </p>\n            <small>* = All fields required</small>\n            <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <div className=\"form-group\">\n                <h2 className=\"lead\">Favorite Movie Genre</h2>\n                <select\n                  name=\"favoritegenre\"\n                  value={favoritegenre}\n                  onChange={(e) => onChange(e)}\n                >\n                  <option>* Select Favorite Genre</option>\n                  <option value=\"Action\">Action</option>\n                  <option value=\"Adventure\">Adventure</option>\n                  <option value=\"Comedy\">Comedy</option>\n                  <option value=\"True Crime\">True Crime</option>\n                  <option value=\"Drama\">Drama</option>\n                  <option value=\"Epics/Historical\">Epics/Historical</option>\n                  <option value=\"Horror\">Horror</option>\n                  <option value=\"Musicals\">Musicals</option>\n                  <option value=\"Science Fiction\">Science Fiction</option>\n                  <option value=\"War\">War</option>\n                  <option value=\"Westerns\">Westerns</option>\n                  <option value=\"Other\">Other</option>\n                </select>\n              </div>\n              <h2 className=\"lead\">Top 3 Movies</h2>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"* Top 3 Movies\"\n                  name=\"topthreemovies\"\n                  value={topthreemovies}\n                  onChange={(e) => onChange(e)}\n                />\n                <small className=\"form-text\">\n                  Please use comma separated values (eg. Interstellar,\n                  Gladiator, Spy Game)\n                </small>\n              </div>\n              <input type=\"submit\" className=\" btn-primary my-1\" />\n\n              <Link to=\"/dashboard\" className=\"btn btn-return\">\n                Go Back\n              </Link>\n            </form>\n          </div>\n        </Animated>\n      </StyledProfileForm>\n    </>\n  );\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  ProfileForm\n);\n"]},"metadata":{},"sourceType":"module"}