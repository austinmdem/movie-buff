{"ast":null,"code":"var _jsxFileName = \"/Users/amd32653/Desktop/movie-buff/src/components/elements/MovieInfo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport MovieThumb from './MovieThumb';\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\nimport StarRatingSystem from './StarRatingSystem';\n\nconst MovieInfo = ({\n  movie\n}) => /*#__PURE__*/React.createElement(StyledMovieInfo, {\n  backdrop: movie.backdrop_path,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movieinfo-content\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movieinfo-thumb\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(MovieThumb, {\n  image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n  clickable: false,\n  alt: \"moviethumb\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movieinfo-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}, movie.title), /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, \"PLOT\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, movie.overview), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"rating-director\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }\n}, \"IMDB RATING\"), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"score\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }\n}, movie.vote_average)), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"director\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}, \"DIRECTOR\", movie.directors.length > 1 ? 'S' : ''), movie.directors.map(element => /*#__PURE__*/React.createElement(\"p\", {\n  key: element.credit_id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 15\n  }\n}, element.name))), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"rating\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(StarRatingSystem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }\n}))))));\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object\n};\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/amd32653/Desktop/movie-buff/src/components/elements/MovieInfo.js"],"names":["React","PropTypes","NoImage","IMAGE_BASE_URL","POSTER_SIZE","MovieThumb","StyledMovieInfo","StarRatingSystem","MovieInfo","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","element","credit_id","name","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,cAA5C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAASC,eAAT,QAAgC,2BAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAChB,oBAAC,eAAD;AAAiB,EAAA,QAAQ,EAAEA,KAAK,CAACC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AACE,EAAA,KAAK,EACHD,KAAK,CAACE,WAAN,GACK,GAAER,cAAe,GAAEC,WAAY,GAAEK,KAAK,CAACE,WAAY,EADxD,GAEIT,OAJR;AAME,EAAA,SAAS,EAAE,KANb;AAOE,EAAA,GAAG,EAAC,YAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,eAYE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKO,KAAK,CAACG,KAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIH,KAAK,CAACI,QAAV,CAHF,eAKE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBJ,KAAK,CAACK,YAA9B,CAFF,CADF,eAKE;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaL,KAAK,CAACM,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,GAA6B,GAA7B,GAAmC,EAAhD,CADF,EAEGP,KAAK,CAACM,SAAN,CAAgBE,GAAhB,CAAqBC,OAAD,iBACnB;AAAG,EAAA,GAAG,EAAEA,OAAO,CAACC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BD,OAAO,CAACE,IAApC,CADD,CAFH,CALF,eAWE;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAXF,CALF,CAZF,CADF,CADF;;AAuCAZ,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,KAAK,EAAER,SAAS,CAACqB;AADG,CAAtB;AAIA,eAAed,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\n\nimport MovieThumb from './MovieThumb';\n\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\nimport StarRatingSystem from './StarRatingSystem';\n\nconst MovieInfo = ({ movie }) => (\n  <StyledMovieInfo backdrop={movie.backdrop_path}>\n    <div className=\"movieinfo-content\">\n      <div className=\"movieinfo-thumb\">\n        <MovieThumb\n          image={\n            movie.poster_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n              : NoImage\n          }\n          clickable={false}\n          alt=\"moviethumb\"\n        />\n      </div>\n      <div className=\"movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n\n        <div className=\"rating-director\">\n          <div>\n            <h3>IMDB RATING</h3>\n            <div className=\"score\">{movie.vote_average}</div>\n          </div>\n          <div className=\"director\">\n            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n            {movie.directors.map((element) => (\n              <p key={element.credit_id}>{element.name}</p>\n            ))}\n          </div>\n          <div className=\"rating\">\n            <StarRatingSystem />\n          </div>\n        </div>\n      </div>\n    </div>\n  </StyledMovieInfo>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}