{"ast":null,"code":"var _jsxFileName = \"/Users/amd32653/Desktop/movie-buff/src/components/routing/PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Login from '../Login';\nimport Spinner from '../elements/Spinner';\n\nconst PrivateRoute = ({\n  as: Component,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...props\n}) => {\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    });\n  } else if (isAuthenticated && !loading) {\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/amd32653/Desktop/movie-buff/src/components/routing/PrivateRoute.js"],"names":["React","PropTypes","connect","Login","Spinner","PrivateRoute","as","Component","auth","isAuthenticated","loading","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,EAAE,EAAEC,SADgB;AAEpBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAFc;AAGpB,KAAGC;AAHiB,CAAD,KAIf;AACJ,MAAID,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAID,eAAe,IAAI,CAACC,OAAxB,EAAiC;AACtC,wBAAO,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFM,MAEA;AACL,wBAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAZD;;AAcAN,YAAY,CAACO,SAAb,GAAyB;AACvBJ,EAAAA,IAAI,EAAEP,SAAS,CAACY,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADsB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACa,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Login from '../Login';\nimport Spinner from '../elements/Spinner';\n\nconst PrivateRoute = ({\n  as: Component,\n  auth: { isAuthenticated, loading },\n  ...props\n}) => {\n  if (loading) {\n    return <Spinner />;\n  } else if (isAuthenticated && !loading) {\n    return <Component {...props} />;\n  } else {\n    return <Login />;\n  }\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}